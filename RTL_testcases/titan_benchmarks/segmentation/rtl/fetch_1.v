// ==============================================================
// RTL generated by AutoPilot - High-Level Synthesis System (C, C++, SystemC)
// Version: 2010.a.3
// Copyright (C) :2006-2010 AutoESL Design Technologies, Inc.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fetch_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        step,
        bus_r_req_din,
        bus_r_req_full_n,
        bus_r_req_write,
        bus_r_rsp_dout,
        bus_r_rsp_empty_n,
        bus_r_rsp_read,
        bus_r_address,
        bus_r_datain,
        bus_r_dataout,
        bus_r_size,
        array_r_address0,
        array_r_ce0,
        array_r_we0,
        array_r_d0,
        array1_address0,
        array1_ce0,
        array1_we0,
        array1_d0,
        array12_address0,
        array12_ce0,
        array12_we0,
        array12_d0,
        array13_address0,
        array13_ce0,
        array13_we0,
        array13_d0,
        array2_address0,
        array2_ce0,
        array2_we0,
        array2_d0,
        array24_address0,
        array24_ce0,
        array24_we0,
        array24_d0,
        array3_address0,
        array3_ce0,
        array3_we0,
        array3_d0,
        array35_address0,
        array35_ce0,
        array35_we0,
        array35_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
input  [5:0] step;
output   bus_r_req_din;
input   bus_r_req_full_n;
output   bus_r_req_write;
input   bus_r_rsp_dout;
input   bus_r_rsp_empty_n;
output   bus_r_rsp_read;
output  [31:0] bus_r_address;
input  [31:0] bus_r_datain;
output  [31:0] bus_r_dataout;
output  [31:0] bus_r_size;
output  [9:0] array_r_address0;
output   array_r_ce0;
output   array_r_we0;
output  [31:0] array_r_d0;
output  [9:0] array1_address0;
output   array1_ce0;
output   array1_we0;
output  [31:0] array1_d0;
output  [9:0] array12_address0;
output   array12_ce0;
output   array12_we0;
output  [31:0] array12_d0;
output  [9:0] array13_address0;
output   array13_ce0;
output   array13_we0;
output  [31:0] array13_d0;
output  [9:0] array2_address0;
output   array2_ce0;
output   array2_we0;
output  [31:0] array2_d0;
output  [9:0] array24_address0;
output   array24_ce0;
output   array24_we0;
output  [31:0] array24_d0;
output  [9:0] array3_address0;
output   array3_ce0;
output   array3_we0;
output  [31:0] array3_d0;
output  [9:0] array35_address0;
output   array35_ce0;
output   array35_we0;
output  [31:0] array35_d0;

reg ap_done;
reg ap_idle;
reg bus_r_req_write;
reg bus_r_rsp_read;
reg array_r_ce0;
reg array_r_we0;
reg array1_ce0;
reg array1_we0;
reg array12_ce0;
reg array12_we0;
reg array13_ce0;
reg array13_we0;
reg array2_ce0;
reg array2_we0;
reg array24_ce0;
reg array24_we0;
reg array3_ce0;
reg array3_we0;
reg array35_ce0;
reg array35_we0;
reg   [1:0] ap_CS_fsm;
reg   [12:0] indvar_flatten_reg_163;
reg   [6:0] i_reg_174;
reg   [6:0] j_reg_185;
wire   [19:0] tmp1_cast_fu_207_p1;
reg   [19:0] tmp1_cast_reg_379;
wire   [0:0] exitcond_fu_211_p2;
reg   [0:0] exitcond_reg_384;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_sig_bdd_106;
reg    ap_reg_ppiten_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_384_pp0_it1;
reg    ap_sig_bdd_114;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_384_pp0_it2;
reg   [12:0] indvar_next_reg_388;
wire   [6:0] i_mid_fu_243_p3;
reg   [6:0] i_mid_reg_393;
wire   [63:0] arrayNo_cast_cast_fu_281_p2;
reg   [63:0] arrayNo_cast_cast_reg_398;
reg   [63:0] ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1;
reg   [63:0] ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2;
reg   [20:0] tmp4_reg_402;
reg   [0:0] tmp8_cast_reg_407;
reg   [0:0] ap_reg_ppstg_tmp8_cast_reg_407_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2;
reg   [10:0] array_addr1_reg_411;
reg   [10:0] ap_reg_ppstg_array_addr1_reg_411_pp0_it1;
reg   [6:0] indvar_next1_reg_416;
reg   [31:0] bus_addr_read_reg_426;
reg   [9:0] array_addr_28_reg_438;
reg   [9:0] array1_addr_reg_443;
reg   [9:0] array12_addr_reg_448;
reg   [9:0] array13_addr_reg_453;
reg   [9:0] array2_addr_reg_458;
reg   [9:0] array24_addr_reg_463;
reg   [9:0] array3_addr_reg_468;
reg   [9:0] array35_addr_reg_473;
reg   [12:0] indvar_flatten_phi_fu_167_p4;
reg   [6:0] i_phi_fu_178_p4;
reg   [6:0] j_phi_fu_189_p4;
wire   [63:0] tmp5_fu_358_p1;
wire   [5:0] tmp_fu_201_p0;
wire   [18:0] tmp_fu_201_p2;
wire   [12:0] exitcond_fu_211_p1;
wire   [6:0] exitcond1_fu_229_p1;
wire   [0:0] exitcond1_fu_229_p2;
wire   [6:0] indvar_next4_dup_fu_223_p2;
wire   [12:0] i_cast5_mid_fu_251_p1;
wire   [12:0] p_shl_fu_259_p2;
wire   [12:0] p_shl1_fu_265_p2;
wire   [12:0] tmp2_fu_271_p2;
wire   [63:0] tmp1_fu_255_p1;
wire   [6:0] j_mid_fu_235_p3;
wire   [19:0] j_cast_fu_293_p1;
wire   [19:0] tmp3_fu_297_p2;
wire   [20:0] tmp10_cast_fu_302_p1;
wire   [20:0] tmp9_cast_fu_277_p1;
wire   [6:0] newIndex_fu_287_p2;
wire   [6:0] newIndex1_fu_316_p2;
wire   [9:0] newIndex_cast_trn_cast_fu_322_p1;
wire   [9:0] p_shl2_fu_330_p2;
wire   [9:0] array_addr_fu_336_p2;
wire   [10:0] array_addr_cast_fu_342_p1;
wire   [10:0] newIndex7_cast_trn_cast_fu_326_p1;
reg   [1:0] ap_NS_fsm;
wire   [31:0] array12_addr_reg_4480;
wire   [31:0] array13_addr_reg_4530;
wire   [31:0] array1_addr_reg_4430;
wire   [31:0] array24_addr_reg_4630;
wire   [31:0] array2_addr_reg_4580;
wire   [31:0] array35_addr_reg_4730;
wire   [31:0] array3_addr_reg_4680;
wire   [31:0] array_addr_28_reg_4380;
wire   [18:0] tmp_fu_201_p00;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st0_fsm_0 = 2'b00;
parameter    ap_ST_st1_fsm_1 = 2'b01;
parameter    ap_ST_pp0_stg0_fsm_2 = 2'b10;
parameter    ap_ST_st6_fsm_3 = 2'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_2 = 64'b0000000000000000000000000000000000000000000000000000000000000010;
parameter    ap_const_lv64_1 = 64'b0000000000000000000000000000000000000000000000000000000000000001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv19_1104 = 19'b0000001000100000100;
parameter    ap_const_lv13_1104 = 13'b1000100000100;
parameter    ap_const_lv13_1 = 13'b0000000000001;
parameter    ap_const_lv7_1 = 7'b0000001;
parameter    ap_const_lv7_42 = 7'b1000010;
parameter    ap_const_lv13_6 = 13'b0000000000110;
parameter    ap_const_lv64_3 = 64'b0000000000000000000000000000000000000000000000000000000000000011;
parameter    ap_const_lv7_2 = 7'b0000010;
parameter    ap_const_lv10_5 = 10'b0000000101;
parameter    ap_true = 1'b1;




/// ap_CS_fsm assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_fu_211_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_fu_211_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_rst or posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[0] <= arrayNo_cast_cast_reg_398[0];
        ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[1] <= arrayNo_cast_cast_reg_398[1];
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[0] <= ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[0];
        ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[1] <= ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[1];
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_array_addr1_reg_411_pp0_it1 <= array_addr1_reg_411;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond_reg_384_pp0_it1 <= exitcond_reg_384;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond_reg_384_pp0_it2 <= ap_reg_ppstg_exitcond_reg_384_pp0_it1;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_tmp8_cast_reg_407_pp0_it1 <= tmp8_cast_reg_407;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2 <= ap_reg_ppstg_tmp8_cast_reg_407_pp0_it1;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array12_addr_reg_448 <= array12_addr_reg_4480;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array13_addr_reg_453 <= array13_addr_reg_4530;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array1_addr_reg_443 <= array1_addr_reg_4430;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array24_addr_reg_463 <= array24_addr_reg_4630;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array2_addr_reg_458 <= array2_addr_reg_4580;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array35_addr_reg_473 <= array35_addr_reg_4730;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array3_addr_reg_468 <= array3_addr_reg_4680;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        arrayNo_cast_cast_reg_398[0] <= arrayNo_cast_cast_fu_281_p2[0];
        arrayNo_cast_cast_reg_398[1] <= arrayNo_cast_cast_fu_281_p2[1];
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        array_addr1_reg_411 <= (array_addr_cast_fu_342_p1 + newIndex7_cast_trn_cast_fu_326_p1);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        array_addr_28_reg_438 <= array_addr_28_reg_4380;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        bus_addr_read_reg_426 <= bus_r_datain;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        exitcond_reg_384 <= (indvar_flatten_phi_fu_167_p4 == exitcond_fu_211_p1? 1'b1: 1'b0);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        if (exitcond1_fu_229_p2) begin
            i_mid_reg_393 <= indvar_next4_dup_fu_223_p2;
        end else begin
            i_mid_reg_393 <= i_phi_fu_178_p4;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        i_reg_174 <= i_mid_reg_393;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        i_reg_174 <= ap_const_lv7_0;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        indvar_flatten_reg_163 <= indvar_next_reg_388;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        indvar_flatten_reg_163 <= ap_const_lv13_0;
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        indvar_next1_reg_416 <= (j_mid_fu_235_p3 + ap_const_lv7_1);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        indvar_next_reg_388 <= (indvar_flatten_phi_fu_167_p4 + ap_const_lv13_1);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        j_reg_185 <= indvar_next1_reg_416;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        j_reg_185 <= ap_const_lv7_0;
    end
    if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        tmp1_cast_reg_379[2] <= tmp1_cast_fu_207_p1[2];
        tmp1_cast_reg_379[3] <= tmp1_cast_fu_207_p1[3];
        tmp1_cast_reg_379[4] <= tmp1_cast_fu_207_p1[4];
        tmp1_cast_reg_379[5] <= tmp1_cast_fu_207_p1[5];
        tmp1_cast_reg_379[6] <= tmp1_cast_fu_207_p1[6];
        tmp1_cast_reg_379[7] <= tmp1_cast_fu_207_p1[7];
        tmp1_cast_reg_379[8] <= tmp1_cast_fu_207_p1[8];
        tmp1_cast_reg_379[9] <= tmp1_cast_fu_207_p1[9];
        tmp1_cast_reg_379[10] <= tmp1_cast_fu_207_p1[10];
        tmp1_cast_reg_379[11] <= tmp1_cast_fu_207_p1[11];
        tmp1_cast_reg_379[12] <= tmp1_cast_fu_207_p1[12];
        tmp1_cast_reg_379[13] <= tmp1_cast_fu_207_p1[13];
        tmp1_cast_reg_379[14] <= tmp1_cast_fu_207_p1[14];
        tmp1_cast_reg_379[15] <= tmp1_cast_fu_207_p1[15];
        tmp1_cast_reg_379[16] <= tmp1_cast_fu_207_p1[16];
        tmp1_cast_reg_379[17] <= tmp1_cast_fu_207_p1[17];
        tmp1_cast_reg_379[18] <= tmp1_cast_fu_207_p1[18];
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        tmp4_reg_402 <= (tmp10_cast_fu_302_p1 + tmp9_cast_fu_277_p1);
    end
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (exitcond_fu_211_p2 == ap_const_lv1_0))) begin
        tmp8_cast_reg_407 <= j_mid_fu_235_p3[0:0];
    end
end

/// ap_NS_fsm assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_211_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3)
begin
    if ((((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | ((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_fu_211_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_NS_fsm = ap_ST_st6_fsm_3;
    end else if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st6_fsm_3 == ap_CS_fsm))) begin
        ap_NS_fsm = ap_ST_st0_fsm_0;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
    end else if ((((ap_ST_st0_fsm_0 == ap_CS_fsm) & (ap_const_logic_1 == ap_start)) | ((ap_const_logic_1 == ap_start) & (ap_ST_st6_fsm_3 == ap_CS_fsm)))) begin
        ap_NS_fsm = ap_ST_st1_fsm_1;
    end else begin
        ap_NS_fsm = ap_CS_fsm;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st0_fsm_0 == ap_CS_fsm) | (ap_ST_st6_fsm_3 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st0_fsm_0 == ap_CS_fsm)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// array12_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1))) begin
        array12_ce0 = ap_const_logic_1;
    end else begin
        array12_ce0 = ap_const_logic_0;
    end
end

/// array12_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1))) begin
        array12_we0 = ap_const_logic_1;
    end else begin
        array12_we0 = ap_const_logic_0;
    end
end

/// array13_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1))) begin
        array13_ce0 = ap_const_logic_1;
    end else begin
        array13_ce0 = ap_const_logic_0;
    end
end

/// array13_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1))) begin
        array13_we0 = ap_const_logic_1;
    end else begin
        array13_we0 = ap_const_logic_0;
    end
end

/// array1_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array1_ce0 = ap_const_logic_1;
    end else begin
        array1_ce0 = ap_const_logic_0;
    end
end

/// array1_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array1_we0 = ap_const_logic_1;
    end else begin
        array1_we0 = ap_const_logic_0;
    end
end

/// array24_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2))) begin
        array24_ce0 = ap_const_logic_1;
    end else begin
        array24_ce0 = ap_const_logic_0;
    end
end

/// array24_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2))) begin
        array24_we0 = ap_const_logic_1;
    end else begin
        array24_we0 = ap_const_logic_0;
    end
end

/// array2_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2))) begin
        array2_ce0 = ap_const_logic_1;
    end else begin
        array2_ce0 = ap_const_logic_0;
    end
end

/// array2_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2))) begin
        array2_we0 = ap_const_logic_1;
    end else begin
        array2_we0 = ap_const_logic_0;
    end
end

/// array35_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array35_ce0 = ap_const_logic_1;
    end else begin
        array35_ce0 = ap_const_logic_0;
    end
end

/// array35_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array35_we0 = ap_const_logic_1;
    end else begin
        array35_we0 = ap_const_logic_0;
    end
end

/// array3_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array3_ce0 = ap_const_logic_1;
    end else begin
        array3_ce0 = ap_const_logic_0;
    end
end

/// array3_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_2) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_1) & ~(ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array3_we0 = ap_const_logic_1;
    end else begin
        array3_we0 = ap_const_logic_0;
    end
end

/// array_r_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array_r_ce0 = ap_const_logic_1;
    end else begin
        array_r_ce0 = ap_const_logic_0;
    end
end

/// array_r_we0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_reg_384_pp0_it2 or ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 or ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == ap_reg_ppstg_tmp8_cast_reg_407_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it2) & (ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2 == ap_const_lv64_0))) begin
        array_r_we0 = ap_const_logic_1;
    end else begin
        array_r_we0 = ap_const_logic_0;
    end
end

/// bus_r_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_reg_384 or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        bus_r_req_write = ap_const_logic_1;
    end else begin
        bus_r_req_write = ap_const_logic_0;
    end
end

/// bus_r_rsp_read assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_106 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_reg_384_pp0_it1 or ap_sig_bdd_114 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_106 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_114 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        bus_r_rsp_read = ap_const_logic_1;
    end else begin
        bus_r_rsp_read = ap_const_logic_0;
    end
end

/// i_phi_fu_178_p4 assign process. ///
always @ (ap_CS_fsm or i_reg_174 or exitcond_reg_384 or ap_reg_ppiten_pp0_it1 or i_mid_reg_393)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        i_phi_fu_178_p4 = i_mid_reg_393;
    end else begin
        i_phi_fu_178_p4 = i_reg_174;
    end
end

/// indvar_flatten_phi_fu_167_p4 assign process. ///
always @ (ap_CS_fsm or indvar_flatten_reg_163 or exitcond_reg_384 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_388)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_flatten_phi_fu_167_p4 = indvar_next_reg_388;
    end else begin
        indvar_flatten_phi_fu_167_p4 = indvar_flatten_reg_163;
    end
end

/// j_phi_fu_189_p4 assign process. ///
always @ (ap_CS_fsm or j_reg_185 or exitcond_reg_384 or ap_reg_ppiten_pp0_it1 or indvar_next1_reg_416)
begin
    if (((ap_ST_pp0_stg0_fsm_2 == ap_CS_fsm) & (exitcond_reg_384 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        j_phi_fu_189_p4 = indvar_next1_reg_416;
    end else begin
        j_phi_fu_189_p4 = j_reg_185;
    end
end

/// ap_sig_bdd_106 assign process. ///
always @ (bus_r_req_full_n or exitcond_reg_384)
begin
    ap_sig_bdd_106 = ((bus_r_req_full_n == ap_const_logic_0) & (exitcond_reg_384 == ap_const_lv1_0));
end

/// ap_sig_bdd_114 assign process. ///
always @ (bus_r_rsp_empty_n or ap_reg_ppstg_exitcond_reg_384_pp0_it1)
begin
    ap_sig_bdd_114 = ((bus_r_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_384_pp0_it1));
end
assign array12_addr_reg_4480 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array12_address0 = array12_addr_reg_448;
assign array12_d0 = bus_addr_read_reg_426;
assign array13_addr_reg_4530 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array13_address0 = array13_addr_reg_453;
assign array13_d0 = bus_addr_read_reg_426;
assign array1_addr_reg_4430 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array1_address0 = array1_addr_reg_443;
assign array1_d0 = bus_addr_read_reg_426;
assign array24_addr_reg_4630 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array24_address0 = array24_addr_reg_463;
assign array24_d0 = bus_addr_read_reg_426;
assign array2_addr_reg_4580 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array2_address0 = array2_addr_reg_458;
assign array2_d0 = bus_addr_read_reg_426;
assign array35_addr_reg_4730 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array35_address0 = array35_addr_reg_473;
assign array35_d0 = bus_addr_read_reg_426;
assign array3_addr_reg_4680 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array3_address0 = array3_addr_reg_468;
assign array3_d0 = bus_addr_read_reg_426;
assign arrayNo_cast_cast_fu_281_p2 = (tmp1_fu_255_p1 & ap_const_lv64_3);
assign array_addr_28_reg_4380 = {{21{1'b0}}, {ap_reg_ppstg_array_addr1_reg_411_pp0_it1}};
assign array_addr_cast_fu_342_p1 = {{1{1'b0}}, {array_addr_fu_336_p2}};
assign array_addr_fu_336_p2 = (p_shl2_fu_330_p2 + newIndex_cast_trn_cast_fu_322_p1);
assign array_r_address0 = array_addr_28_reg_438;
assign array_r_d0 = bus_addr_read_reg_426;
assign bus_r_address = tmp5_fu_358_p1;
assign bus_r_dataout = ap_const_lv32_0;
assign bus_r_req_din = ap_const_logic_0;
assign bus_r_size = ap_const_lv32_0;
assign exitcond1_fu_229_p1 = ap_const_lv7_42;
assign exitcond1_fu_229_p2 = (j_phi_fu_189_p4 == exitcond1_fu_229_p1? 1'b1: 1'b0);
assign exitcond_fu_211_p1 = ap_const_lv13_1104;
assign exitcond_fu_211_p2 = (indvar_flatten_phi_fu_167_p4 == exitcond_fu_211_p1? 1'b1: 1'b0);
assign i_cast5_mid_fu_251_p1 = {{6{1'b0}}, {i_mid_fu_243_p3}};
assign i_mid_fu_243_p3 = ((exitcond1_fu_229_p2)? indvar_next4_dup_fu_223_p2: i_phi_fu_178_p4);
assign indvar_next4_dup_fu_223_p2 = (i_phi_fu_178_p4 + ap_const_lv7_1);
assign j_cast_fu_293_p1 = {{13{1'b0}}, {j_mid_fu_235_p3}};
assign j_mid_fu_235_p3 = ((exitcond1_fu_229_p2)? ap_const_lv7_0: j_phi_fu_189_p4);
assign newIndex1_fu_316_p2 = j_mid_fu_235_p3 >> ap_const_lv7_1;
assign newIndex7_cast_trn_cast_fu_326_p1 = {{4{1'b0}}, {newIndex1_fu_316_p2}};
assign newIndex_cast_trn_cast_fu_322_p1 = {{3{1'b0}}, {newIndex_fu_287_p2}};
assign newIndex_fu_287_p2 = i_mid_fu_243_p3 >> ap_const_lv7_2;
assign p_shl1_fu_265_p2 = i_cast5_mid_fu_251_p1 << ap_const_lv13_1;
assign p_shl2_fu_330_p2 = newIndex_cast_trn_cast_fu_322_p1 << ap_const_lv10_5;
assign p_shl_fu_259_p2 = i_cast5_mid_fu_251_p1 << ap_const_lv13_6;
assign tmp10_cast_fu_302_p1 = {{1{1'b0}}, {tmp3_fu_297_p2}};
assign tmp1_cast_fu_207_p1 = {{1{1'b0}}, {tmp_fu_201_p2}};
assign tmp1_fu_255_p1 = {{57{1'b0}}, {i_mid_fu_243_p3}};
assign tmp2_fu_271_p2 = (p_shl_fu_259_p2 + p_shl1_fu_265_p2);
assign tmp3_fu_297_p2 = (tmp1_cast_reg_379 + j_cast_fu_293_p1);
assign tmp5_fu_358_p1 = {{43{1'b0}}, {tmp4_reg_402}};
assign tmp9_cast_fu_277_p1 = {{8{1'b0}}, {tmp2_fu_271_p2}};
assign tmp_fu_201_p0 = tmp_fu_201_p00;
assign tmp_fu_201_p00 = {{13{1'b0}}, {step}};
assign tmp_fu_201_p2 = (tmp_fu_201_p0 * $signed('h1104));
always @ (ap_clk)
begin
    tmp1_cast_reg_379[0] <= 1'b0;
    tmp1_cast_reg_379[1] <= 1'b0;
    tmp1_cast_reg_379[19] <= 1'b0;
end

always @ (ap_clk)
begin
    arrayNo_cast_cast_reg_398[2] <= 1'b0;
    arrayNo_cast_cast_reg_398[3] <= 1'b0;
    arrayNo_cast_cast_reg_398[4] <= 1'b0;
    arrayNo_cast_cast_reg_398[5] <= 1'b0;
    arrayNo_cast_cast_reg_398[6] <= 1'b0;
    arrayNo_cast_cast_reg_398[7] <= 1'b0;
    arrayNo_cast_cast_reg_398[8] <= 1'b0;
    arrayNo_cast_cast_reg_398[9] <= 1'b0;
    arrayNo_cast_cast_reg_398[10] <= 1'b0;
    arrayNo_cast_cast_reg_398[11] <= 1'b0;
    arrayNo_cast_cast_reg_398[12] <= 1'b0;
    arrayNo_cast_cast_reg_398[13] <= 1'b0;
    arrayNo_cast_cast_reg_398[14] <= 1'b0;
    arrayNo_cast_cast_reg_398[15] <= 1'b0;
    arrayNo_cast_cast_reg_398[16] <= 1'b0;
    arrayNo_cast_cast_reg_398[17] <= 1'b0;
    arrayNo_cast_cast_reg_398[18] <= 1'b0;
    arrayNo_cast_cast_reg_398[19] <= 1'b0;
    arrayNo_cast_cast_reg_398[20] <= 1'b0;
    arrayNo_cast_cast_reg_398[21] <= 1'b0;
    arrayNo_cast_cast_reg_398[22] <= 1'b0;
    arrayNo_cast_cast_reg_398[23] <= 1'b0;
    arrayNo_cast_cast_reg_398[24] <= 1'b0;
    arrayNo_cast_cast_reg_398[25] <= 1'b0;
    arrayNo_cast_cast_reg_398[26] <= 1'b0;
    arrayNo_cast_cast_reg_398[27] <= 1'b0;
    arrayNo_cast_cast_reg_398[28] <= 1'b0;
    arrayNo_cast_cast_reg_398[29] <= 1'b0;
    arrayNo_cast_cast_reg_398[30] <= 1'b0;
    arrayNo_cast_cast_reg_398[31] <= 1'b0;
    arrayNo_cast_cast_reg_398[32] <= 1'b0;
    arrayNo_cast_cast_reg_398[33] <= 1'b0;
    arrayNo_cast_cast_reg_398[34] <= 1'b0;
    arrayNo_cast_cast_reg_398[35] <= 1'b0;
    arrayNo_cast_cast_reg_398[36] <= 1'b0;
    arrayNo_cast_cast_reg_398[37] <= 1'b0;
    arrayNo_cast_cast_reg_398[38] <= 1'b0;
    arrayNo_cast_cast_reg_398[39] <= 1'b0;
    arrayNo_cast_cast_reg_398[40] <= 1'b0;
    arrayNo_cast_cast_reg_398[41] <= 1'b0;
    arrayNo_cast_cast_reg_398[42] <= 1'b0;
    arrayNo_cast_cast_reg_398[43] <= 1'b0;
    arrayNo_cast_cast_reg_398[44] <= 1'b0;
    arrayNo_cast_cast_reg_398[45] <= 1'b0;
    arrayNo_cast_cast_reg_398[46] <= 1'b0;
    arrayNo_cast_cast_reg_398[47] <= 1'b0;
    arrayNo_cast_cast_reg_398[48] <= 1'b0;
    arrayNo_cast_cast_reg_398[49] <= 1'b0;
    arrayNo_cast_cast_reg_398[50] <= 1'b0;
    arrayNo_cast_cast_reg_398[51] <= 1'b0;
    arrayNo_cast_cast_reg_398[52] <= 1'b0;
    arrayNo_cast_cast_reg_398[53] <= 1'b0;
    arrayNo_cast_cast_reg_398[54] <= 1'b0;
    arrayNo_cast_cast_reg_398[55] <= 1'b0;
    arrayNo_cast_cast_reg_398[56] <= 1'b0;
    arrayNo_cast_cast_reg_398[57] <= 1'b0;
    arrayNo_cast_cast_reg_398[58] <= 1'b0;
    arrayNo_cast_cast_reg_398[59] <= 1'b0;
    arrayNo_cast_cast_reg_398[60] <= 1'b0;
    arrayNo_cast_cast_reg_398[61] <= 1'b0;
    arrayNo_cast_cast_reg_398[62] <= 1'b0;
    arrayNo_cast_cast_reg_398[63] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[2] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[3] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[4] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[5] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[6] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[7] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[8] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[9] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[10] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[11] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[12] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[13] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[14] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[15] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[16] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[17] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[18] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[19] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[20] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[21] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[22] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[23] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[24] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[25] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[26] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[27] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[28] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[29] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[30] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[31] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[32] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[33] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[34] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[35] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[36] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[37] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[38] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[39] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[40] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[41] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[42] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[43] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[44] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[45] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[46] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[47] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[48] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[49] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[50] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[51] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[52] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[53] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[54] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[55] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[56] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[57] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[58] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[59] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[60] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[61] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[62] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it1[63] <= 1'b0;
end

always @ (ap_clk)
begin
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[2] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[3] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[4] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[5] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[6] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[7] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[8] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[9] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[10] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[11] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[12] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[13] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[14] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[15] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[16] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[17] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[18] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[19] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[20] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[21] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[22] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[23] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[24] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[25] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[26] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[27] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[28] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[29] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[30] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[31] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[32] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[33] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[34] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[35] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[36] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[37] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[38] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[39] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[40] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[41] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[42] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[43] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[44] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[45] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[46] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[47] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[48] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[49] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[50] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[51] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[52] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[53] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[54] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[55] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[56] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[57] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[58] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[59] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[60] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[61] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[62] <= 1'b0;
    ap_reg_ppstg_arrayNo_cast_cast_reg_398_pp0_it2[63] <= 1'b0;
end



endmodule //fetch_1

